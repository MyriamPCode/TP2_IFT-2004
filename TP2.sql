set SERVEROUTPUT ON

drop table TP2_UTILISATEUR cascade constraints;
drop table TP2_ENTREPRISE cascade constraints;
drop table TP2_PROJET cascade constraints;
drop table TP2_UTILISATEUR_PROJET cascade constraints;
drop table TP2_PROFIL_ACCESSIBILITE cascade constraints;
drop table TP2_PROFIL_ACCESSIBILITE_IMAGE cascade constraints;
drop table TP2_PROFIL_ACCESSIBILITE_IMAGE_COORDONNEE cascade constraints;
drop table TP2_PROFIL_ACCESSIBILITE_PLAN cascade constraints;
drop table TP2_PROFIL_ACCESSIBILITE_PLAN_COORDONNEE cascade constraints;
drop table TP2_SONDAGE cascade constraints;
drop table TP2_TYPE_QUESTION cascade constraints;
drop table TP2_QUESTION cascade constraints;
drop table TP2_CHOIX_REPONSE cascade constraints;
drop table TP2_REPONSE_UTILISATEUR cascade constraints;
drop table TP2_SONDAGE_ARCHIVE cascade constraints;
drop table TP2_QUESTION_ARCHIVE cascade constraints;
drop table TP2_CHOIX_REPONSE_ARCHIVE cascade constraints;

drop sequence TP2_NO_UTILISATEUR_SEQ;
drop sequence TP2_NO_SONDAGE_SEQ;
drop sequence TP2_ID_QUESTION_SEQ;
drop sequence TP2_ID_CHOIX_REPONSE_SEQ;



-- 1
-- a
create table TP2_UTILISATEUR (
    NO_UTILISATEUR number(6) not null,
    COURRIEL_UTI varchar2(40) not null,
    MOT_DE_PASSE_UTI varchar2(40) not null,
    PRENOM_UTI varchar2(40) not null,
    NOM_UTI varchar2(40) not null,
    TYPE_UTI varchar2(14) not null,
    constraint PK_UTILISATEUR primary key(NO_UTILISATEUR));
    
create sequence TP2_NO_UTILISATEUR_SEQ
    start with 1000 increment by 5;
    
create table TP2_ENTREPRISE (
    NO_ENTREPRISE number(6) generated by default as identity
        start with 1 increment by 1,
    NOM_ENT varchar2(40) not null,
    NOM_FICHIER_LOGO_ENT varchar2(200) null,
    ADRESSE_ENT varchar2(40) not null,
    CODE_POSTAL_ENT char(7) not null,
    VILLE_ENT varchar2(40) not null,
    COURRIEL_ENT varchar2(40) not null,
    NO_ENTREPRISE_DIRIGEANTE number(6) null,
    constraint PK_ENTREPRISE primary key(NO_ENTREPRISE),
    constraint FK_ENT_NO_ENT_DIRI foreign key (NO_ENTREPRISE_DIRIGEANTE)
        references TP2_ENTREPRISE(NO_ENTREPRISE));
    
create table TP2_PROJET (
    CODE_PROJET char(4) not null,
    DATE_PRO DATE not null,
    NOM_PRO varchar2(40) null,
    NO_ENTREPRISE number(6) not null,
    constraint PK_PROJET primary key(CODE_PROJET),
    constraint FK_PRO_NO_ENTREPRISE foreign key(NO_ENTREPRISE)
        references TP2_ENTREPRISE(NO_ENTREPRISE));

create table TP2_UTILISATEUR_PROJET (
    NO_UTILISATEUR number(6) not null,
    CODE_PROJET char(4) not null,
    constraint PK_UTILISATEUR_PROJET primary key(NO_UTILISATEUR,CODE_PROJET),
    constraint FK_UTIPRO_NO_UTILISATEUR foreign key(NO_UTILISATEUR)
        references TP2_UTILISATEUR(NO_UTILISATEUR),
    constraint FK_UTIPRO_CODE_PROJET foreign key(CODE_PROJET)
        references TP2_PROJET(CODE_PROJET));
    
create table TP2_PROFIL_ACCESSIBILITE (
    NO_PROFIL number(6) generated by default as identity
        start with 666 increment by 1,
    THEME_PROF varchar2(40) null,
    TEXTE_PROF varchar2(40) null,
    CODE_PROJET char(4) not null,
    constraint PK_PROFIL_ACCESSIBILITE primary key(NO_PROFIL),
    constraint FK_PA_CODE_PROJET foreign key(CODE_PROJET)
        references TP2_PROJET(CODE_PROJET));

create table TP2_PROFIL_ACCESSIBILITE_IMAGE (
    NO_IMAGE number(6) generated by default as identity
        start with 100 increment by 2,
    NO_PROFIL number(6) not null,
    HAUTEUR_IMA number(6) not null,
    LARGEUR_IMA number(6) not null,
    constraint PK_PROFIL_ACCESSIBILITE_IMAGE primary key(NO_IMAGE),
    constraint FK_PAIMAGE_NO_PROFIL foreign key(NO_PROFIL)
        references TP2_PROFIL_ACCESSIBILITE(NO_PROFIL));

create table TP2_PROFIL_ACCESSIBILITE_IMAGE_COORDONNEE (
    NO_IMAGE number(6) not null, 
    NOM_I_COO varchar2(40) not null, 
    DESC_CO varchar2(40) not null, 
    POSITION_X_COO number(6) not null, 
    POSITION_Y_COO number(6) not null,
    constraint PK_PROFIL_ACCESS_IM_COORDONNEE primary key (NO_IMAGE, NOM_I_COO),
    constraint FK_PAIMCOO_NO_IMAGE foreign key (NO_IMAGE)
        references TP2_PROFIL_ACCESSIBILITE_IMAGE(NO_IMAGE));

create table TP2_PROFIL_ACCESSIBILITE_PLAN (
    NO_PLAN number(6) generated by default as identity
        start with 1 increment by 1, 
    NO_PROFIL number(6) not null, 
    HAUTEUR_PLA number(6) not null, 
    LARGEUR_PLA number(6) not null,
    constraint PK_PROFIL_ACCESS_PLAN primary key (NO_PLAN),
    constraint FK_PAPLAN_NO_PROFIL foreign key (NO_PROFIL)
        references TP2_PROFIL_ACCESSIBILITE(NO_PROFIL));

create table TP2_PROFIL_ACCESSIBILITE_PLAN_COORDONNEE (
    NO_P_COO number(6) generated by default as identity
        start with 1 increment by 1, 
    NO_PLAN number(6) not null, 
    LONGITUDE_COO number(9,6) not null, 
    LATITUDE_COO number(9,6) not null,
    constraint TP2_PK_PROFIL_ACCESS_PLAN_COORDONNEE primary key (NO_P_COO),
    constraint TP2_FK_PAPCOO_NO_PLAN foreign key (NO_PLAN)
        references TP2_PROFIL_ACCESSIBILITE_PLAN(NO_PLAN));

 create table TP2_SONDAGE (
    NO_SONDAGE number(8) not null, 
    DATE_CREATION_SON date not null, 
    DATE_DEBUT_SON date null, 
    DATE_FIN_SON date null, 
    TITRE_SON varchar2(100) not null, 
    CODE_PROJET char(4) not null,
    constraint PK_SONDAGE primary key (NO_SONDAGE),
    constraint FK_SON_CODE_PROJET foreign key (CODE_PROJET)
        references TP2_PROJET(CODE_PROJET),
    constraint TP2_AK_SON_TITRE_SON unique (TITRE_SON));

create sequence TP2_NO_SONDAGE_SEQ
    start with 5000
    increment by 100;

create table TP2_TYPE_QUESTION (
    CODE_TYPE_QUESTION char(4) not null,
    DESC_TYPE_QUE varchar2(40) not null,
    constraint PK_TYPE_QUESTION primary key(CODE_TYPE_QUESTION));
     
create table TP2_QUESTION (
    ID_QUESTION number(6) not null,
    ORDRE_QUESTION number(3) default 001 not null,
    CODE_TYPE_QUESTION char(4) not null,
    TEXTE_QUE varchar2(100) not null,
    NO_SONDAGE number(8) not null,
    constraint PK_QUESTION primary key(ID_QUESTION),
    constraint FK_QUE_CODE_TYPE_QUESTION foreign key(CODE_TYPE_QUESTION)
        references TP2_TYPE_QUESTION(CODE_TYPE_QUESTION),
    constraint FK_QUE_NO_SONDAGE foreign key(NO_SONDAGE)
        references TP2_SONDAGE(NO_SONDAGE));
    
create sequence TP2_ID_QUESTION_SEQ
    start with 1 increment by 1;
    
create table TP2_CHOIX_REPONSE (
    ID_CHOIX_REPONSE number(6) not null,
    ORDRE_REPONSE number(3) not null,
    TEXTE_CHO varchar2(100) not null,
    ID_QUESTION number(6) not null,
    constraint PK_CHOIX_REPONSE primary key(ID_CHOIX_REPONSE),
    constraint FK_CR_ID_QUESTION foreign key(ID_QUESTION)
        references TP2_QUESTION(ID_QUESTION));
        
create sequence TP2_ID_CHOIX_REPONSE_SEQ
    start with 10000 increment by 1;
        
create table TP2_REPONSE_UTILISATEUR (
    NO_UTILISATEUR number(6) not null,
    ID_CHOIX_REPONSE number(6) not null,
    TEXTE_REP varchar2(1000) not null,
    constraint PK_REPONSE_UTILISATEUR primary key(NO_UTILISATEUR, ID_CHOIX_REPONSE),
    constraint FK_RU_NO_UTILISATEUR foreign key(NO_UTILISATEUR)
        references TP2_UTILISATEUR(NO_UTILISATEUR),
    constraint FK_RU_ID_CHOIX_REPONSE foreign key(ID_CHOIX_REPONSE)
        references TP2_CHOIX_REPONSE(ID_CHOIX_REPONSE));
        
create or replace view TP2_ADMINISTRATEUR (COURRIEL_ADM, MOT_DE_PASSE_ADM, NOM_ADM, PRENOM_ADM) as
    select COURRIEL_UTI, MOT_DE_PASSE_UTI, NOM_UTI, PRENOM_UTI 
        from TP2_UTILISATEUR
        where TYPE_UTI = 'Administrateur';
        
-- b
insert into TP2_UTILISATEUR (NO_UTILISATEUR, COURRIEL_UTI, MOT_DE_PASSE_UTI, PRENOM_UTI, NOM_UTI, TYPE_UTI) values (TP2_NO_UTILISATEUR_SEQ.nextval, 'trym.tealeaf@gmail.com', TP2_FCT_GENERER_MOT_DE_PASSE(10), 'Trym', 'Tealeaf', 'Employé');
insert into TP2_UTILISATEUR (NO_UTILISATEUR, COURRIEL_UTI, MOT_DE_PASSE_UTI, PRENOM_UTI, NOM_UTI, TYPE_UTI) values (TP2_NO_UTILISATEUR_SEQ.nextval, 'anahno.mistvale@gmail.com', TP2_FCT_GENERER_MOT_DE_PASSE(16), 'Anahno', 'Mistvale', 'Administrateur');

insert into TP2_ENTREPRISE (NOM_ENT, NOM_FICHIER_LOGO_ENT, ADRESSE_ENT, CODE_POSTAL_ENT, VILLE_ENT, COURRIEL_ENT) values ('King''s council', 'C:\User\Trym\KingsConcil\logo.jpg', '1 king avenue', 'R1K 1C1', 'Rexxentrum', 'king.council@gmail.com');
insert into TP2_ENTREPRISE (NOM_ENT, NOM_FICHIER_LOGO_ENT, ADRESSE_ENT, CODE_POSTAL_ENT, VILLE_ENT, COURRIEL_ENT, NO_ENTREPRISE_DIRIGEANTE) values ('Cobalt Soul', 'C:\User\Anahno\CobaltSoul\logo.jpg', '32 soul avenue', 'C0B 1S0', 'Zadash', 'cobalt.soul@gmail.com', 1);

insert into TP2_PROJET (CODE_PROJET, DATE_PRO, NOM_PRO, NO_ENTREPRISE) values ('A1B2', to_date('23-11-07','RR-MM-DD'), 'Order 66', 1);
insert into TP2_PROJET (CODE_PROJET, DATE_PRO, NOM_PRO, NO_ENTREPRISE) values ('C3D4', to_date('23-11-07','RR-MM-DD'), 'Projet Nemesis', 2);

insert into TP2_UTILISATEUR_PROJET (NO_UTILISATEUR, CODE_PROJET) values (1005, 'A1B2');
insert into TP2_UTILISATEUR_PROJET (NO_UTILISATEUR, CODE_PROJET) values (1005, 'C3D4');

insert into TP2_PROFIL_ACCESSIBILITE (THEME_PROF, CODE_PROJET) values ('Jedi', 'A1B2');
insert into TP2_PROFIL_ACCESSIBILITE (THEME_PROF, CODE_PROJET) values ('Sith', 'A1B2');

insert into TP2_PROFIL_ACCESSIBILITE_IMAGE (NO_PROFIL, HAUTEUR_IMA, LARGEUR_IMA) values (666, 004587, 036259);
insert into TP2_PROFIL_ACCESSIBILITE_IMAGE (NO_PROFIL, HAUTEUR_IMA, LARGEUR_IMA) values (667, 004587, 036259);

insert into TP2_PROFIL_ACCESSIBILITE_IMAGE_COORDONNEE (NO_IMAGE, NOM_I_COO, DESC_CO, POSITION_X_COO, POSITION_Y_COO) values (100, 'Conduit d''évacuation' , 'Faiblesse de L''étoile de la mort' , 8, 25);
insert into TP2_PROFIL_ACCESSIBILITE_IMAGE_COORDONNEE (NO_IMAGE, NOM_I_COO, DESC_CO, POSITION_X_COO, POSITION_Y_COO) values (102, 'Ach-To' , 'Direction à suivre vers Ach-To' , 4, 6);

insert into TP2_PROFIL_ACCESSIBILITE_PLAN (NO_PROFIL, HAUTEUR_PLA, LARGEUR_PLA) values (666, 50, 100);
insert into TP2_PROFIL_ACCESSIBILITE_PLAN (NO_PROFIL, HAUTEUR_PLA, LARGEUR_PLA) values (667, 1080, 1920);

insert into TP2_PROFIL_ACCESSIBILITE_PLAN_COORDONNEE (NO_PLAN, LONGITUDE_COO, LATITUDE_COO) values (1, 48.804568, 2.121241);
insert into TP2_PROFIL_ACCESSIBILITE_PLAN_COORDONNEE (NO_PLAN, LONGITUDE_COO, LATITUDE_COO) values (2, -47.15, -126.716666);

insert into TP2_SONDAGE (NO_SONDAGE, DATE_CREATION_SON, DATE_DEBUT_SON, DATE_FIN_SON, TITRE_SON, CODE_PROJET) values (TP2_NO_SONDAGE_SEQ.nextval, to_date('23-09-08','RR-MM-DD'), to_date('23-11-11','RR-MM-DD'), to_date('23-12-12','RR-MM-DD'), 'Order 66', 'A1B2');
insert into TP2_SONDAGE (NO_SONDAGE, DATE_CREATION_SON, DATE_DEBUT_SON, DATE_FIN_SON, TITRE_SON, CODE_PROJET) values (TP2_NO_SONDAGE_SEQ.nextval, to_date('23-09-08','RR-MM-DD'), to_date('23-11-11','RR-MM-DD'), to_date('23-12-12','RR-MM-DD'), 'Chewbacca', 'A1B2');
insert into TP2_SONDAGE (NO_SONDAGE, DATE_CREATION_SON, DATE_DEBUT_SON, DATE_FIN_SON, TITRE_SON, CODE_PROJET) values (TP2_NO_SONDAGE_SEQ.nextval, to_date('2000-01-01', 'RRRR-MM-DD'), to_date('2000-04-01', 'RRRR-MM-DD'), to_date('2000-04-30', 'RRRR-MM-DD'), 'Étoile de la mort', 'A1B2');

insert into TP2_TYPE_QUESTION (CODE_TYPE_QUESTION, DESC_TYPE_QUE) values ('MC04', 'Choix multiples 4 options');
insert into TP2_TYPE_QUESTION (CODE_TYPE_QUESTION, DESC_TYPE_QUE) values ('RC22', 'Réponse courte');
insert into TP2_TYPE_QUESTION (CODE_TYPE_QUESTION, DESC_TYPE_QUE) values ('RB11', 'À développement');

insert into TP2_QUESTION (ID_QUESTION, ORDRE_QUESTION, CODE_TYPE_QUESTION, TEXTE_QUE, NO_SONDAGE) values (TP2_ID_QUESTION_SEQ.nextval, 002, 'MC04', 'Quel est le meilleur point d''accès pour un vaisseau?', 5000);
insert into TP2_QUESTION (ID_QUESTION, ORDRE_QUESTION, CODE_TYPE_QUESTION, TEXTE_QUE, NO_SONDAGE) values (TP2_ID_QUESTION_SEQ.nextval, 004, 'MC04', 'Quel véhicule est le plus rapide?', 5200);
insert into TP2_QUESTION (ID_QUESTION, ORDRE_QUESTION, CODE_TYPE_QUESTION, TEXTE_QUE, NO_SONDAGE) values (TP2_ID_QUESTION_SEQ.nextval, 006, 'MC04', 'Avec qui seriez-vous prêt à faire du co-voiturage?', 5200);

insert into TP2_CHOIX_REPONSE (ID_CHOIX_REPONSE, ORDRE_REPONSE, TEXTE_CHO, ID_QUESTION) values (TP2_ID_CHOIX_REPONSE_SEQ.nextval, 015, 'Plateforme d''atterrissage, Piste au sol, Spatioport, Clairière', 1);
insert into TP2_CHOIX_REPONSE (ID_CHOIX_REPONSE, ORDRE_REPONSE, TEXTE_CHO, ID_QUESTION) values (TP2_ID_CHOIX_REPONSE_SEQ.nextval, 016, 'Motojet 74-Z, TIE, X-Wing T-65, Y-Wing BTL-S3', 2);
insert into TP2_CHOIX_REPONSE (ID_CHOIX_REPONSE, ORDRE_REPONSE, TEXTE_CHO, ID_QUESTION) values (TP2_ID_CHOIX_REPONSE_SEQ.nextval, 017, 'Obi-wan Kenobi, Luke Skywalker, Darth Vader, Padme Amidala', 3);

insert into TP2_REPONSE_UTILISATEUR (NO_UTILISATEUR, ID_CHOIX_REPONSE, TEXTE_REP) values (1000, 10000, 'Yoda');
insert into TP2_REPONSE_UTILISATEUR (NO_UTILISATEUR, ID_CHOIX_REPONSE, TEXTE_REP) values (1000, 10001, 'Obi-Wan Kenobi');
insert into TP2_REPONSE_UTILISATEUR (NO_UTILISATEUR, ID_CHOIX_REPONSE, TEXTE_REP) values (1000, 10002, 'Darth Vader');

-- c
--insert into TP2_PROFIL_ACCESSIBILITE (NO_PROFIL, THEME_PROF, CODE_PROJET) values (12, 'Sénateur', 'A1B2');
--insert into TP2_PROFIL_ACCESSIBILITE_PLAN (NO_PROFIL, HAUTEUR_PLA, LARGEUR_PLA) values (12, 6513, 456);

insert into TP2_PROFIL_ACCESSIBILITE_IMAGE (NO_PROFIL, HAUTEUR_IMA, LARGEUR_IMA)
    select NO_PROFIL, HAUTEUR_PLA, LARGEUR_PLA
        from TP2_PROFIL_ACCESSIBILITE_PLAN
        where NO_PROFIL = 12;

-- d

delete from TP2_REPONSE_UTILISATEUR 
    where NO_UTILISATEUR in (select distinct R.NO_UTILISATEUR
                                from TP2_REPONSE_UTILISATEUR R
                                inner join TP2_CHOIX_REPONSE C ON R.ID_CHOIX_REPONSE = C.ID_CHOIX_REPONSE
                                inner join TP2_QUESTION Q ON C.ID_QUESTION = Q.ID_QUESTION
                                inner join TP2_SONDAGE S ON Q.NO_SONDAGE = S.NO_SONDAGE
                                where sysdate - interval '6' month > S.DATE_FIN_SON);

delete from TP2_UTILISATEUR 
    where NO_UTILISATEUR in (select distinct R.NO_UTILISATEUR
                                from TP2_REPONSE_UTILISATEUR R
                                inner join TP2_CHOIX_REPONSE C ON R.ID_CHOIX_REPONSE = C.ID_CHOIX_REPONSE
                                inner join TP2_QUESTION Q ON C.ID_QUESTION = Q.ID_QUESTION
                                inner join TP2_SONDAGE S ON Q.NO_SONDAGE = S.NO_SONDAGE
                                where sysdate - interval '6' month > S.DATE_FIN_SON
                                and R.ID_CHOIX_REPONSE is null);
                                
-- e
--insert into TP2_QUESTION (ID_QUESTION, ORDRE_QUESTION, CODE_TYPE_QUESTION, TEXTE_QUE, NO_SONDAGE) values (TP2_ID_QUESTION_SEQ.nextval, 003, 'RC22', 'En route vers lan 3000', 5000);
--insert into TP2_TYPE_QUESTION (CODE_TYPE_QUESTION, DESC_TYPE_QUE) values ('VF01', 'Vrai ou Faux');

update TP2_QUESTION 
    set CODE_TYPE_QUESTION = (select CODE_TYPE_QUESTION
                                from TP2_TYPE_QUESTION
                                where DESC_TYPE_QUE = 'Vrai ou Faux')
    where ORDRE_QUESTION = 3 and TEXTE_QUE = 'En route vers lan 3000';

-- f
--insert into TP2_ENTREPRISE (NOM_ENT, ADRESSE_ENT, CODE_POSTAL_ENT, VILLE_ENT, COURRIEL_ENT, NO_ENTREPRISE_DIRIGEANTE) values ('centre de dragon', '123 Dragon', 'D6A 6O3', 'Zadash', '123dragon@gmail.com', 1);

select NOM_ENT, CODE_POSTAL_ENT
    from TP2_ENTREPRISE
    where NOM_ENT like'%centre%';
    
-- g
select Q.ORDRE_QUESTION, Q.TEXTE_QUE
    from TP2_QUESTION Q
    inner join TP2_SONDAGE S on Q.NO_SONDAGE = S.NO_SONDAGE
    where extract(year from S.DATE_CREATION_SON) = 2023
    and extract(month from S.DATE_CREATION_SON) = 9
    order by S.NO_SONDAGE asc, Q.ORDRE_QUESTION asc;
    
-- h
select TEXTE_REP 
    from TP2_REPONSE_UTILISATEUR
    where ID_CHOIX_REPONSE in (select ID_CHOIX_REPONSE 
                                   from TP2_CHOIX_REPONSE
                                   where ID_QUESTION in (select ID_QUESTION 
                                                            from TP2_QUESTION
                                                            where CODE_TYPE_QUESTION in (select CODE_TYPE_QUESTION 
                                                                                         from TP2_TYPE_QUESTION 
                                                                                         where DESC_TYPE_QUE in ('À développement'))));

select R.TEXTE_REP 
    from TP2_REPONSE_UTILISATEUR R, TP2_CHOIX_REPONSE C
    where R.ID_CHOIX_REPONSE = C.ID_CHOIX_REPONSE 
    and R.ID_CHOIX_REPONSE = (select C.ID_CHOIX_REPONSE  
                                  from TP2_CHOIX_REPONSE C, TP2_QUESTION Q
                                  where C.ID_QUESTION = Q.ID_QUESTION 
                                  and C.ID_QUESTION = (select Q.ID_QUESTION 
                                                          from TP2_QUESTION Q, TP2_TYPE_QUESTION T
                                                          where Q.CODE_TYPE_QUESTION = T.CODE_TYPE_QUESTION 
                                                          and Q.CODE_TYPE_QUESTION = (select CODE_TYPE_QUESTION 
                                                                                      from TP2_TYPE_QUESTION 
                                                                                      where DESC_TYPE_QUE = 'À développement')));
                                                                                      
select TEXTE_REP 
    from TP2_REPONSE_UTILISATEUR R
    where exists ( select ID_CHOIX_REPONSE
                    from TP2_CHOIX_REPONSE C
                    where R.ID_CHOIX_REPONSE = C.ID_CHOIX_REPONSE 
                    and exists (select ID_QUESTION  
                                    from TP2_QUESTION Q
                                    where C.ID_QUESTION = Q.ID_QUESTION 
                                    and exists (select CODE_TYPE_QUESTION
                                                    from TP2_TYPE_QUESTION T
                                                    where Q.CODE_TYPE_QUESTION = T.CODE_TYPE_QUESTION 
                                                    and  DESC_TYPE_QUE = 'À développement')));
 
 --i                                                   
select U.PRENOM_UTI || ' ' || U.NOM_UTI as NOM_COMPLET, S.TITRE_SON as NOM_SONDAGE, count(R.NO_UTILISATEUR) as NB_REPONSE
    from TP2_UTILISATEUR U
    join TP2_REPONSE_UTILISATEUR R on U.NO_UTILISATEUR = R.NO_UTILISATEUR
    join TP2_SONDAGE S on R.ID_CHOIX_REPONSE = S.NO_SONDAGE
    group by U.PRENOM_UTI, U.NOM_UTI, S.TITRE_SON
    order by NB_REPONSE desc; 

--j
select NOM_ENT
    from TP2_ENTREPRISE
    where NO_ENTREPRISE not in (select NO_ENTREPRISE
                                    from TP2_PROJET
                                    group by NO_ENTREPRISE
                                    having count(*) = 2);
                                    
select NOM_ENT
    from TP2_ENTREPRISE
    minus
    select E.NOM_ENT 
        from TP2_ENTREPRISE E 
        join TP2_PROJET P on E.NO_ENTREPRISE = P.NO_ENTREPRISE
        group by E.NO_ENTREPRISE, E.NOM_ENT
        having count(*) = 2;
        
select NOM_ENT
    from TP2_ENTREPRISE E
    where not exists (select 1
                          from TP2_PROJET P
                          where E.NO_ENTREPRISE = P.NO_ENTREPRISE
                          group by P.NO_ENTREPRISE
                          having count(*) = 2);
                          
--k
select NOM_ENT
    from TP2_ENTREPRISE
    where NO_ENTREPRISE not in (select NO_ENTREPRISE
                                   from TP2_PROJET
                                   where DATE_PRO >= sysdate - interval '12' month)
order by NOM_ENT asc;

--l
(select COURRIEL_UTI
    from TP2_UTILISATEUR
    where COURRIEL_UTI like '%.ca')
    intersect (select COURRIEL_ENT from TP2_ENTREPRISE where COURRIEL_ENT like '%ca'); 
    
select COURRIEL_UTI
    from TP2_UTILISATEUR U
    where exists ( select 1
                       from TP2_ENTREPRISE E 
                       where U.COURRIEL_UTI = E.COURRIEL_ENT
                       and U.COURRIEL_UTI like '%.ca');
    
select COURRIEL_UTI
    from TP2_UTILISATEUR
    where COURRIEL_UTI like '%.ca'
    and COURRIEL_UTI in (select COURRIEL_ENT from TP2_ENTREPRISE);

--m
col NOM_ENTREPRISE format a40
col VILLE format a40
col CHEMIN format a80

create or replace view TP2_VUE_HIERARCHIE_ENTREPRISE (NOM_ENTREPRISE, CODE_POSTAL, VILLE, CHEMIN, NIVEAU) as 
    select lpad(' ', LEVEL * 2, ' ') || NOM_ENT,
            CODE_POSTAL_ENT,
            VILLE_ENT,
            sys_connect_by_path(COURRIEL_ENT, '/'),
            level 
        from TP2_ENTREPRISE
        connect by prior NO_ENTREPRISE = NO_ENTREPRISE_DIRIGEANTE
        start with NO_ENTREPRISE_DIRIGEANTE is null;
        
select * from TP2_VUE_HIERARCHIE_ENTREPRISE;

--insert into TP2_VUE_HIERARCHIE_ENTREPRISE (NOM_ENTREPRISE, CODE_POSTAL, VILLE) values ('Cartel hutt', 'J3D 7Y4', 'Kor Vella')

/* 1)m)iii) (1) Non, il n'est pas possible d'ajouter un enregistrement à partir de la vue.
            (2) On ne respecte pas les contraintes d'intégrité de la table associée TP2_ENTREPRISE, c'est-à-dire, les not null (tous les champs doivent être remplis) et la PK qui est obligatoire
*/


--n 
delete from TP2_UTILISATEUR_PROJET
    where CODE_PROJET = 'C3D4';

update TP2_UTILISATEUR_PROJET 
    set CODE_PROJET = 'C3D4'
    where CODE_PROJET = 'A1B2';

insert into TP2_PROFIL_ACCESSIBILITE_IMAGE_COORDONNEE (NO_IMAGE)
    select NO_IMAGE
        from TP2_PROFIL_ACCESSIBILITE_IMAGE
        where NO_IMAGE = 666;
        
alter table TP2_UTILISATEUR
    add AGE_UTIL number(2) null;


--2
--a
create or replace trigger TP2_TRG_AIU_ORDRE_QUESTION
    after insert or update of ORDRE_QUESTION on TP2_QUESTION
declare
    V_MEME_ORDRE_TROUVE number(1);
begin
select max(count(*))
    into V_MEME_ORDRE_TROUVE
    from TP2_QUESTION
    group by NO_SONDAGE, ORDRE_QUESTION; 
                                    
if V_MEME_ORDRE_TROUVE > 1 then
    raise_application_error(-20000,'Deux questions ne peuvent pas avoir le même ordre');
end if;
end TRG_AIU_ORDRE_QUESTION;
/


--b
create table TP2_SONDAGE_ARCHIVE (
    NO_SONDAGE number(8) not null, 
    DATE_CREATION_SON date not null, 
    DATE_DEBUT_SON date null, 
    DATE_FIN_SON date null, 
    TITRE_SON varchar2(100) not null, 
    CODE_PROJET char(4) not null,
    constraint PK_SONDAGE_ARCHIVE primary key (NO_SONDAGE),
    constraint TP2_AK_SONARCH_TITRE_SON unique (TITRE_SON));
    
create table TP2_QUESTION_ARCHIVE (
    ID_QUESTION number(6) not null,
    ORDRE_QUESTION number(3) default 001 not null,
    CODE_TYPE_QUESTION char(4) not null,
    TEXTE_QUE varchar2(100) not null,
    NO_SONDAGE number(8) not null,
    constraint PK_QUESTION_ARCHIVE primary key(ID_QUESTION),
    constraint FK_SONARCH_NO_SONDAGE foreign key(NO_SONDAGE)
        references TP2_SONDAGE_ARCHIVE(NO_SONDAGE));
    
create table TP2_CHOIX_REPONSE_ARCHIVE (
    ID_CHOIX_REPONSE number(6) not null,
    ORDRE_REPONSE number(3) not null,
    TEXTE_CHO varchar2(100) not null,
    ID_QUESTION number(6) not null,
    constraint PK_CHOIX_REPONSE_ARCHIVE primary key(ID_CHOIX_REPONSE),
    constraint FK_CHOARCH_ID_QUESTION foreign key(ID_QUESTION)
        references TP2_QUESTION_ARCHIVE(ID_QUESTION));
        
create or replace procedure TP2_SP_ARCHIVER_SONDAGE(PI_DATE in date) is 
    E_DATE_PLUS_PETIT_3_ANS exception;
begin
if PI_DATE > add_months(sysdate, -12*3) then
    raise E_DATE_PLUS_PETIT_3_ANS;
end if;

insert into TP2_SONDAGE_ARCHIVE
    select *
    from TP2_SONDAGE
    where DATE_FIN_SON < PI_DATE;

insert into TP2_QUESTION_ARCHIVE
    select *
    from TP2_QUESTION
    where NO_SONDAGE in (select NO_SONDAGE
                            from TP2_SONDAGE
                            where DATE_FIN_SON < PI_DATE);

insert into TP2_CHOIX_REPONSE_ARCHIVE
    select *
    from TP2_CHOIX_REPONSE
    where ID_QUESTION in (select ID_QUESTION
                            from TP2_QUESTION
                            where NO_SONDAGE in (select NO_SONDAGE
                                                from TP2_SONDAGE
                                                where DATE_FIN_SON < PI_DATE));

delete from TP2_CHOIX_REPONSE
    where ID_QUESTION in (select ID_QUESTION
                            from TP2_QUESTION
                            where NO_SONDAGE in (select NO_SONDAGE
                                                from TP2_SONDAGE
                                                where DATE_FIN_SON < PI_DATE));
delete from TP2_QUESTION
    where NO_SONDAGE in (select NO_SONDAGE
                            from TP2_SONDAGE
                            where DATE_FIN_SON < PI_DATE);
                            
delete from TP2_SONDAGE
    where DATE_FIN_SON < PI_DATE;


exception
    when E_DATE_PLUS_PETIT_3_ANS then
        dbms_output.put_line('La date doit être plus vieille qu''il y a 3 ans.');
end TP2_SP_ARCHIVER_SONDAGE;
/

execute TP2_SP_ARCHIVER_SONDAGE(to_date('2020-01-01', 'RRRR-MM-DD'));



-- c
create or replace function TP2_FCT_GENERER_MOT_DE_PASSE(PI_NB_DIGITS in number) return varchar2 
is
    V_PASSWORD varchar2(16);
    V_LENGTH number(2) := PI_NB_DIGITS;
    E_DIGITS_INVALID exception;
begin
    if (PI_NB_DIGITS < 12) then
        V_LENGTH := 12;
    elsif (PI_NB_DIGITS > 16) then
        raise E_DIGITS_INVALID;
    end if;
    
    V_PASSWORD := dbms_random.string('p', V_LENGTH);   
    return V_PASSWORD;
    
    exception
    when E_DIGITS_INVALID then
    dbms_output.put_line('Exceed limits of caracter for password');
end TP2_FCT_GENERER_MOT_DE_PASSE;
/

-- d
/*Avant d'insérer la réponse d'un utilisateur dans la base de données, on vérifie si ce même utilisateur a déjà répondu au sondage.
Permet de garder une intégrité des réponses en empêchant les utilisateurs de répondre plusieurs fois.*/
create or replace trigger TP2_TRG_BIU_DEJA_REPONDU 
before insert or update of TEXTE_REP on TP2_REPONSE_UTILISATEUR
declare
    V_NO_UTILISATEUR number(6);
    E_UTI_DEJA_REPONDU exception;
begin        
    select NO_UTILISATEUR
        into V_NO_UTILISATEUR
        from TP2_REPONSE_UTILISATEUR 
        where ID_CHOIX_REPONSE = (select ID_CHOIX_REPONSE
                                    from TP2_CHOIX_REPONSE
                                    where ID_QUESTION = (select ID_QUESTION
                                                            from TP2_QUESTION));
    
    if V_NO_UTILISATEUR is not null then
        raise E_UTI_DEJA_REPONDU;
    end if;
    
    exception
        when E_UTI_DEJA_REPONDU then
            dbms_output.put_line(V_NO_UTILISATEUR + 'already answered sondage');   
end TP2_TRG_BIU_DEJA_REPONDU;
/

--3
--a
NOM_PROJET
NOM PRENOM EMP
NOM_ENT
DATE_CREA_SON
DATE_FIN_SON
--i)

--ii)

--iii)
